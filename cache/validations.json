{
  "version": "3.2",
  "log": [
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "8ae4e19ea15b375f2718c967514c0e95e07ac30c0ec40e170096a7826cb06804",
          "withoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31",
          "linkedWithoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "9ba205bf1912155c70ee863f9724abd4b4ddd7d4f99ab33d2c80ec6fb9b994bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "dfb30eeb1ed1569cc07ad58ee828b9c61c0ee3b1c9f9fc162601afaca7421f06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fab4dcfcc5aedfdfc5b5ccf0dd16039256acf9322d857feae1443c6d9c8bda94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CurseNFT": {
        "src": "contracts/CurseNFT.sol:19",
        "version": {
          "withMetadata": "0d0cd32139c7233f033d523894310b66420cc86f2927af61a41bc1ce7ca5d64e",
          "withoutMetadata": "3de0b6e21babc238f51f44333bb21fcc9da8a186d5dd72aacde50cb917834f55",
          "linkedWithoutMetadata": "3de0b6e21babc238f51f44333bb21fcc9da8a186d5dd72aacde50cb917834f55"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CurseNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/CurseNFT.sol:32"
            },
            {
              "contract": "CurseNFT",
              "label": "_status",
              "type": "t_enum(Status)2360",
              "src": "contracts/CurseNFT.sol:33"
            },
            {
              "contract": "CurseNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/CurseNFT.sol:34"
            },
            {
              "contract": "CurseNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/CurseNFT.sol:36"
            },
            {
              "contract": "CurseNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/CurseNFT.sol:37"
            },
            {
              "contract": "CurseNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/CurseNFT.sol:39"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2360": {
              "label": "enum CurseNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/CurseNFT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f859a5dc6b3998617ae9be316697205112c912a754f10309c0a79f14ff35c758",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "8ae4e19ea15b375f2718c967514c0e95e07ac30c0ec40e170096a7826cb06804",
          "withoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31",
          "linkedWithoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "9ba205bf1912155c70ee863f9724abd4b4ddd7d4f99ab33d2c80ec6fb9b994bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "dfb30eeb1ed1569cc07ad58ee828b9c61c0ee3b1c9f9fc162601afaca7421f06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fab4dcfcc5aedfdfc5b5ccf0dd16039256acf9322d857feae1443c6d9c8bda94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CurseNFT": {
        "src": "contracts/CurseNFT.sol:19",
        "version": {
          "withMetadata": "2d3da75d5149ea319428dee9722494b2c0ed5759c1085250ff9ef77aad4b1bac",
          "withoutMetadata": "3de0b6e21babc238f51f44333bb21fcc9da8a186d5dd72aacde50cb917834f55",
          "linkedWithoutMetadata": "3de0b6e21babc238f51f44333bb21fcc9da8a186d5dd72aacde50cb917834f55"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CurseNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/CurseNFT.sol:32"
            },
            {
              "contract": "CurseNFT",
              "label": "_status",
              "type": "t_enum(Status)2360",
              "src": "contracts/CurseNFT.sol:33"
            },
            {
              "contract": "CurseNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/CurseNFT.sol:34"
            },
            {
              "contract": "CurseNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/CurseNFT.sol:36"
            },
            {
              "contract": "CurseNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/CurseNFT.sol:37"
            },
            {
              "contract": "CurseNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/CurseNFT.sol:39"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2360": {
              "label": "enum CurseNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "bf2222b769bafb4ba462caba1ee59940d65dc945690391a11b34ca25732d2897",
          "withoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1",
          "linkedWithoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)2529",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2529": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "163404a1906e276c9e8add5ef9545a899b7f2df2a756c876b4e7baee611f1c92",
          "withoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124",
          "linkedWithoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)3063",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)3063": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f859a5dc6b3998617ae9be316697205112c912a754f10309c0a79f14ff35c758",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "8ae4e19ea15b375f2718c967514c0e95e07ac30c0ec40e170096a7826cb06804",
          "withoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31",
          "linkedWithoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "9ba205bf1912155c70ee863f9724abd4b4ddd7d4f99ab33d2c80ec6fb9b994bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "dfb30eeb1ed1569cc07ad58ee828b9c61c0ee3b1c9f9fc162601afaca7421f06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fab4dcfcc5aedfdfc5b5ccf0dd16039256acf9322d857feae1443c6d9c8bda94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CurseNFT": {
        "src": "contracts/CurseNFT.sol:19",
        "version": {
          "withMetadata": "cbcb59faf587347c1ddd4d8de962d066199e76ac419590f159f843c52b685c46",
          "withoutMetadata": "f066f59ebf8c58c08d14d9b60f1fef739d301a3d4ba3ce599fb9433d4d9cc70e",
          "linkedWithoutMetadata": "f066f59ebf8c58c08d14d9b60f1fef739d301a3d4ba3ce599fb9433d4d9cc70e"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "checkUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CurseNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/CurseNFT.sol:32"
            },
            {
              "contract": "CurseNFT",
              "label": "_status",
              "type": "t_enum(Status)2360",
              "src": "contracts/CurseNFT.sol:33"
            },
            {
              "contract": "CurseNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/CurseNFT.sol:34"
            },
            {
              "contract": "CurseNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/CurseNFT.sol:36"
            },
            {
              "contract": "CurseNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/CurseNFT.sol:37"
            },
            {
              "contract": "CurseNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/CurseNFT.sol:39"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2360": {
              "label": "enum CurseNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "bf2222b769bafb4ba462caba1ee59940d65dc945690391a11b34ca25732d2897",
          "withoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1",
          "linkedWithoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)2523",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2523": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "163404a1906e276c9e8add5ef9545a899b7f2df2a756c876b4e7baee611f1c92",
          "withoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124",
          "linkedWithoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)3057",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)3057": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f859a5dc6b3998617ae9be316697205112c912a754f10309c0a79f14ff35c758",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "8ae4e19ea15b375f2718c967514c0e95e07ac30c0ec40e170096a7826cb06804",
          "withoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31",
          "linkedWithoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "9ba205bf1912155c70ee863f9724abd4b4ddd7d4f99ab33d2c80ec6fb9b994bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "dfb30eeb1ed1569cc07ad58ee828b9c61c0ee3b1c9f9fc162601afaca7421f06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fab4dcfcc5aedfdfc5b5ccf0dd16039256acf9322d857feae1443c6d9c8bda94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CurseNFT": {
        "src": "contracts/CurseNFT.sol:19",
        "version": {
          "withMetadata": "cb98748cae79488bcf89f4043c9530170d8456065a758f2e9edd4a7ca17e08b1",
          "withoutMetadata": "8e3b0cd8a2b2418bac800d33e7100376a60fabe66731dd38863177185f654692",
          "linkedWithoutMetadata": "8e3b0cd8a2b2418bac800d33e7100376a60fabe66731dd38863177185f654692"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CurseNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/CurseNFT.sol:22"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "bf2222b769bafb4ba462caba1ee59940d65dc945690391a11b34ca25732d2897",
          "withoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1",
          "linkedWithoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)2468",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2468": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "163404a1906e276c9e8add5ef9545a899b7f2df2a756c876b4e7baee611f1c92",
          "withoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124",
          "linkedWithoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)3002",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)3002": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f859a5dc6b3998617ae9be316697205112c912a754f10309c0a79f14ff35c758",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "8ae4e19ea15b375f2718c967514c0e95e07ac30c0ec40e170096a7826cb06804",
          "withoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31",
          "linkedWithoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "9ba205bf1912155c70ee863f9724abd4b4ddd7d4f99ab33d2c80ec6fb9b994bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "dfb30eeb1ed1569cc07ad58ee828b9c61c0ee3b1c9f9fc162601afaca7421f06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fab4dcfcc5aedfdfc5b5ccf0dd16039256acf9322d857feae1443c6d9c8bda94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CurseNFT": {
        "src": "contracts/CurseNFT.sol:19",
        "version": {
          "withMetadata": "9366aacf3c981cad11349332cbfcb0987d3f0f23a44b7a3f92afdbc50d490a77",
          "withoutMetadata": "d68642ec186f5887ed55f2e329aad8ba08c2bd21a12058afb13549077a9bad29",
          "linkedWithoutMetadata": "d68642ec186f5887ed55f2e329aad8ba08c2bd21a12058afb13549077a9bad29"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CurseNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/CurseNFT.sol:22"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "bf2222b769bafb4ba462caba1ee59940d65dc945690391a11b34ca25732d2897",
          "withoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1",
          "linkedWithoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)2435",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2435": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "163404a1906e276c9e8add5ef9545a899b7f2df2a756c876b4e7baee611f1c92",
          "withoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124",
          "linkedWithoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)2969",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2969": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f859a5dc6b3998617ae9be316697205112c912a754f10309c0a79f14ff35c758",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "8ae4e19ea15b375f2718c967514c0e95e07ac30c0ec40e170096a7826cb06804",
          "withoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31",
          "linkedWithoutMetadata": "720fef7396532bb3992c8a1c8c95519296c373dc5abba7c6a8f3b73848ffbf31"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "9ba205bf1912155c70ee863f9724abd4b4ddd7d4f99ab33d2c80ec6fb9b994bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "dfb30eeb1ed1569cc07ad58ee828b9c61c0ee3b1c9f9fc162601afaca7421f06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fab4dcfcc5aedfdfc5b5ccf0dd16039256acf9322d857feae1443c6d9c8bda94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CurseNFT": {
        "src": "contracts/CurseNFT.sol:9",
        "version": {
          "withMetadata": "481439c2e2a6b21dfa6441efdd0633fbf520053ff61f6147faa93bb3bbeab72e",
          "withoutMetadata": "e0eba4973155972ad84d1995c7be5d117cec9988785038c1e80695821d164dcc",
          "linkedWithoutMetadata": "e0eba4973155972ad84d1995c7be5d117cec9988785038c1e80695821d164dcc"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "bf2222b769bafb4ba462caba1ee59940d65dc945690391a11b34ca25732d2897",
          "withoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1",
          "linkedWithoutMetadata": "5e9280f0ae4cd0574f24ba90b8fb400dc040f5557615bd73061e8a6ab467a8e1"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)2402",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2402": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "163404a1906e276c9e8add5ef9545a899b7f2df2a756c876b4e7baee611f1c92",
          "withoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124",
          "linkedWithoutMetadata": "23c61a471423f1085f23da77b079697ea63f66e1feef95847e1b276f8e368124"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)2936",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2936": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f859a5dc6b3998617ae9be316697205112c912a754f10309c0a79f14ff35c758",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "edc5e472e7bb906eea3a7e668c5d81682cccf701397f10bf793607d5bc8d77ca",
          "withoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb",
          "linkedWithoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a76342d6cf5957089fe3ded54dfb285514d5c308da0975ab0520f5af541132a9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "1f4c21e162ebe3011deb2523617a8aaff6f1df398f8f033ac8136fdc6566e754",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "c91f4fb9856331949243ca3fb05b24d0335973b09be4e480d071814350c09c78",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "6c2fc8aee70a3491f7eda05d66b0b1623c2ee96f167ec621df5626a05aed14a1",
          "withoutMetadata": "a7d40e2971947c6bd373a4a12cf70d645a8cf94a1c1e59bec227e0b14a4dd3de",
          "linkedWithoutMetadata": "a7d40e2971947c6bd373a4a12cf70d645a8cf94a1c1e59bec227e0b14a4dd3de"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)2361",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2361": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "59106972d4a525f74cd1657205bec34585f3b329e886a1f1708e54b09ee8d9d1",
          "withoutMetadata": "127e8fa0a65152cdb4b8dc7bfd72d759a2d6967d4c90962e8be702198f5a10cf",
          "linkedWithoutMetadata": "127e8fa0a65152cdb4b8dc7bfd72d759a2d6967d4c90962e8be702198f5a10cf"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)2895",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2895": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "edc5e472e7bb906eea3a7e668c5d81682cccf701397f10bf793607d5bc8d77ca",
          "withoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb",
          "linkedWithoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a76342d6cf5957089fe3ded54dfb285514d5c308da0975ab0520f5af541132a9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "1f4c21e162ebe3011deb2523617a8aaff6f1df398f8f033ac8136fdc6566e754",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "c91f4fb9856331949243ca3fb05b24d0335973b09be4e480d071814350c09c78",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "c9f56503d56d27db1ae49668190df15e662ddc17edd5ead9729d589f6b1fe15f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "fd816c8ca5c908dd05e20fd3da347352e459a06a921c6a2eed80ec1f926be6d4",
          "withoutMetadata": "127e8fa0a65152cdb4b8dc7bfd72d759a2d6967d4c90962e8be702198f5a10cf",
          "linkedWithoutMetadata": "127e8fa0a65152cdb4b8dc7bfd72d759a2d6967d4c90962e8be702198f5a10cf"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)2564",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2564": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "edc5e472e7bb906eea3a7e668c5d81682cccf701397f10bf793607d5bc8d77ca",
          "withoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb",
          "linkedWithoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a76342d6cf5957089fe3ded54dfb285514d5c308da0975ab0520f5af541132a9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "1f4c21e162ebe3011deb2523617a8aaff6f1df398f8f033ac8136fdc6566e754",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "c91f4fb9856331949243ca3fb05b24d0335973b09be4e480d071814350c09c78",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "c9f56503d56d27db1ae49668190df15e662ddc17edd5ead9729d589f6b1fe15f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "9314e7c529fd66203bbdcfeb7eabb2adb351e20869af2a88b88153b210dfe657",
          "withoutMetadata": "a7d40e2971947c6bd373a4a12cf70d645a8cf94a1c1e59bec227e0b14a4dd3de",
          "linkedWithoutMetadata": "a7d40e2971947c6bd373a4a12cf70d645a8cf94a1c1e59bec227e0b14a4dd3de"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)2564",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2564": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:21",
        "version": {
          "withMetadata": "3fcf41cd5b5648d6148bb0ebf46e61246cbc922c3026638f0f574360b65fa22c",
          "withoutMetadata": "4f58526dcaa0bb55e5d60cb27a713fae470aa7ffd55d592d488fcb42882a9e86",
          "linkedWithoutMetadata": "4f58526dcaa0bb55e5d60cb27a713fae470aa7ffd55d592d488fcb42882a9e86"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)3098",
              "src": "contracts/ETHTrackerNFT_TEST.sol:36"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:39"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)3098": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "edc5e472e7bb906eea3a7e668c5d81682cccf701397f10bf793607d5bc8d77ca",
          "withoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb",
          "linkedWithoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a76342d6cf5957089fe3ded54dfb285514d5c308da0975ab0520f5af541132a9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "1f4c21e162ebe3011deb2523617a8aaff6f1df398f8f033ac8136fdc6566e754",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "c91f4fb9856331949243ca3fb05b24d0335973b09be4e480d071814350c09c78",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:18",
        "version": {
          "withMetadata": "aaa0d32db124a9dc2532b718bbe273d1f1ec8bdf52e7bf4a1567650c859204ca",
          "withoutMetadata": "2ccd76f4c5ce03ed882002d611cb02f9f30f51bccdc54aa4c53da23295df37cf",
          "linkedWithoutMetadata": "2ccd76f4c5ce03ed882002d611cb02f9f30f51bccdc54aa4c53da23295df37cf"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:29"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:35"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:38"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:11",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "bc802a5af9f4e4acf9a8f33a31959fab40682b7cd790c63b20960333f1a9d87e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "c9f56503d56d27db1ae49668190df15e662ddc17edd5ead9729d589f6b1fe15f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CurseNFT": {
        "src": "contracts/CurseNFT.sol:9",
        "version": {
          "withMetadata": "7c910aa1e8a744fece416a70e6e8a2a7a79bd9ba0a4e6a6dccbc3290bdc6fe7f",
          "withoutMetadata": "8c3b297697f3cbd8ec1229ed92feece96b4383844ab9afeb4091f2db96d3b637",
          "linkedWithoutMetadata": "8c3b297697f3cbd8ec1229ed92feece96b4383844ab9afeb4091f2db96d3b637"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:21",
        "version": {
          "withMetadata": "26b3ccfe9a19187a44ef43484885582aeb6c2d09517007a78b27cb347ca38d75",
          "withoutMetadata": "a7d40e2971947c6bd373a4a12cf70d645a8cf94a1c1e59bec227e0b14a4dd3de",
          "linkedWithoutMetadata": "a7d40e2971947c6bd373a4a12cf70d645a8cf94a1c1e59bec227e0b14a4dd3de"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "OwnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)3939",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:39"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:40"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:42"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)3939": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:19",
        "version": {
          "withMetadata": "52d57ed03cdb49d0ba78abbe7303ab10c4ac03ad76a65c7f39178a7caf15f651",
          "withoutMetadata": "9b5710d92f16722faf94fb87feaadd8b3cc7f8f29d9757fba1d7adf857dad8ba",
          "linkedWithoutMetadata": "9b5710d92f16722faf94fb87feaadd8b3cc7f8f29d9757fba1d7adf857dad8ba"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ETHTrackerNFT_TEST",
            "src": "contracts/ETHTrackerNFT_TEST.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:32"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)4464",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:35"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:38"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)4464": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "edc5e472e7bb906eea3a7e668c5d81682cccf701397f10bf793607d5bc8d77ca",
          "withoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb",
          "linkedWithoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a76342d6cf5957089fe3ded54dfb285514d5c308da0975ab0520f5af541132a9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "c91f4fb9856331949243ca3fb05b24d0335973b09be4e480d071814350c09c78",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "c9f56503d56d27db1ae49668190df15e662ddc17edd5ead9729d589f6b1fe15f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:18",
        "version": {
          "withMetadata": "3bb2acbe164924d2158659ff7d164ea097a0b42d7a4c472e00551b9035625f7a",
          "withoutMetadata": "a5b561eb52e5b0ed35f4f9a4192eba0c9477542386a67cf550555757240922f3",
          "linkedWithoutMetadata": "a5b561eb52e5b0ed35f4f9a4192eba0c9477542386a67cf550555757240922f3"
        },
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:31"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)1885",
              "src": "contracts/ETHTrackerNFT.sol:33"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:39"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)1885": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:19",
        "version": {
          "withMetadata": "edc5e472e7bb906eea3a7e668c5d81682cccf701397f10bf793607d5bc8d77ca",
          "withoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb",
          "linkedWithoutMetadata": "e4443145ce030e13a9b4f48eeac5f8ee1748e31173dd8ed92a07997d7070f0cb"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "a76342d6cf5957089fe3ded54dfb285514d5c308da0975ab0520f5af541132a9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "c91f4fb9856331949243ca3fb05b24d0335973b09be4e480d071814350c09c78",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:22",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "c9f56503d56d27db1ae49668190df15e662ddc17edd5ead9729d589f6b1fe15f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:18",
        "version": {
          "withMetadata": "53362ea97d9c1b6b746a443206eb5c16a3bb356a18a7896219691a96c8fa17f2",
          "withoutMetadata": "a5b561eb52e5b0ed35f4f9a4192eba0c9477542386a67cf550555757240922f3",
          "linkedWithoutMetadata": "a5b561eb52e5b0ed35f4f9a4192eba0c9477542386a67cf550555757240922f3"
        },
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "initialize(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:31"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)1884",
              "src": "contracts/ETHTrackerNFT.sol:33"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:34"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:37"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:39"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)1884": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:18",
        "version": {
          "withMetadata": "aaa0d32db124a9dc2532b718bbe273d1f1ec8bdf52e7bf4a1567650c859204ca",
          "withoutMetadata": "2ccd76f4c5ce03ed882002d611cb02f9f30f51bccdc54aa4c53da23295df37cf",
          "linkedWithoutMetadata": "2ccd76f4c5ce03ed882002d611cb02f9f30f51bccdc54aa4c53da23295df37cf"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:29"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:35"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:38"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:11",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "bc802a5af9f4e4acf9a8f33a31959fab40682b7cd790c63b20960333f1a9d87e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "c9f56503d56d27db1ae49668190df15e662ddc17edd5ead9729d589f6b1fe15f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT": {
        "src": "contracts/ETHTrackerNFT.sol:17",
        "version": {
          "withMetadata": "d5ee1c00c455e7c8d5e1fe1824a116402f769c7987bab24703a8f68d92c8f409",
          "withoutMetadata": "6f943509553cfea08f46916a27f11eceddbaaebce3b94527aad2ae951de67956",
          "linkedWithoutMetadata": "6f943509553cfea08f46916a27f11eceddbaaebce3b94527aad2ae951de67956"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "(string,address)",
          "tokenURI(uint256)",
          "updatePrice()",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ETHTrackerNFT",
            "src": "contracts/ETHTrackerNFT.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT.sol:30"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_status",
              "type": "t_enum(Status)1615",
              "src": "contracts/ETHTrackerNFT.sol:32"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT.sol:33"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT.sol:35"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT.sol:36"
            },
            {
              "contract": "ETHTrackerNFT",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT.sol:38"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)1615": {
              "label": "enum ETHTrackerNFT.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "KeeperCompatibleInterface": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETHTrackerNFT_TEST": {
        "src": "contracts/ETHTrackerNFT_TEST.sol:19",
        "version": {
          "withMetadata": "52d57ed03cdb49d0ba78abbe7303ab10c4ac03ad76a65c7f39178a7caf15f651",
          "withoutMetadata": "9b5710d92f16722faf94fb87feaadd8b3cc7f8f29d9757fba1d7adf857dad8ba",
          "linkedWithoutMetadata": "9b5710d92f16722faf94fb87feaadd8b3cc7f8f29d9757fba1d7adf857dad8ba"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "(string,address)",
          "tokenURI(uint256)",
          "TEST_UpdatePrice(int256,uint256)",
          "checkUpkeep(bytes,int256,uint256)",
          "performUpkeep(bytes,int256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ETHTrackerNFT_TEST",
            "src": "contracts/ETHTrackerNFT_TEST.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/ETHTrackerNFT_TEST.sol:32"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_status",
              "type": "t_enum(Status)2122",
              "src": "contracts/ETHTrackerNFT_TEST.sol:34"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "_base",
              "type": "t_string_storage",
              "src": "contracts/ETHTrackerNFT_TEST.sol:35"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestPrice",
              "type": "t_int256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:37"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "latestDateChecked",
              "type": "t_uint256",
              "src": "contracts/ETHTrackerNFT_TEST.sol:38"
            },
            {
              "contract": "ETHTrackerNFT_TEST",
              "label": "trend",
              "type": "t_int16",
              "src": "contracts/ETHTrackerNFT_TEST.sol:40"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_enum(Status)2122": {
              "label": "enum ETHTrackerNFT_TEST.Status",
              "members": [
                "Up1",
                "Up2",
                "Up5",
                "Down1",
                "Down2",
                "Down5",
                "twentyThousand"
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_int16": {
              "label": "int16"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}